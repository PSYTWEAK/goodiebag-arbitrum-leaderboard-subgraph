// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class MultiBuy extends ethereum.Event {
  get params(): MultiBuy__Params {
    return new MultiBuy__Params(this);
  }
}

export class MultiBuy__Params {
  _event: MultiBuy;

  constructor(event: MultiBuy) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class GoodieBag extends ethereum.SmartContract {
  static bind(address: Address): GoodieBag {
    return new GoodieBag("GoodieBag", address);
  }

  weth(): Address {
    let result = super.call("weth", "weth():(address)", []);

    return result[0].toAddress();
  }

  try_weth(): ethereum.CallResult<Address> {
    let result = super.tryCall("weth", "weth():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class MultiBuyCall extends ethereum.Call {
  get inputs(): MultiBuyCall__Inputs {
    return new MultiBuyCall__Inputs(this);
  }

  get outputs(): MultiBuyCall__Outputs {
    return new MultiBuyCall__Outputs(this);
  }
}

export class MultiBuyCall__Inputs {
  _call: MultiBuyCall;

  constructor(call: MultiBuyCall) {
    this._call = call;
  }

  get router(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokens(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }

  get swapCalldatas(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class MultiBuyCall__Outputs {
  _call: MultiBuyCall;

  constructor(call: MultiBuyCall) {
    this._call = call;
  }
}
